name: CI/CD Pipeline  # A name for your workflow

on:
  push:
    branches: [ main ]  # Triggers on push to the 'main' branch
  pull_request:
    branches: [ main ]  # Triggers on pull requests against 'main' branch

jobs:
  build-test-deploy:  # Name of the job
    runs-on: ubuntu-latest  # Specifies the runner environment (Ubuntu)

    steps:
      - uses: actions/checkout@v3  # Checks out the project code from GitHub

      - name: Set up Docker Buildx  # Configures Docker Buildx for multi-arch builds
        uses: docker/setup-buildx-action@v2

      - name: Build and test  # Combine build and testing in a single step
        uses: docker/build-push-action@v3  # Uses the docker/build-push-action
        with:
          context: .  # Context is the current directory (where the workflow file is)
          file: Dockerfile  # Specifies the Dockerfile to use
          push: false  # Disables image publishing for now (security best practice)
          tags: myapp:latest  # Tags the built image (change 'myapp' if needed)
          builder: ${{ steps.buildx.outputs.name }}  # Uses the builder output from setup-buildx

          # Your testing commands are executed as part of the build process 
          run: | 
            pip install -r requirements.txt 
            pytest tests

      - name: Run with act  # Runs docker-compose using the act tool
        uses: nektos/act@v1  # Uses the nektos/act action
        with:
          args: docker-compose up -d  # Arguments passed to act (runs docker-compose)
